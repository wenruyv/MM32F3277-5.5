<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\MM32F3277.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\MM32F3277.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu May 05 17:08:53 2022
<BR><P>
<H3>Maximum Stack Usage =        288 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM8_UP_IRQHandler &rArr; Angle_Speed_Control &rArr; gyro_x_ang_caculate &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[35]">ADC3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from common.o(i.BusFault_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1e]">CAN1_RX_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[43]">COMP1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from isr.o(i.DMA1_Channel1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from isr.o(i.DMA1_Channel2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from isr.o(i.DMA1_Channel3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from isr.o(i.DMA1_Channel4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from isr.o(i.DMA1_Channel5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from isr.o(i.DMA1_Channel6_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from isr.o(i.DMA1_Channel7_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel1_IRQHandler</a> from isr.o(i.DMA2_Channel1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel2_IRQHandler</a> from isr.o(i.DMA2_Channel2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel3_IRQHandler</a> from isr.o(i.DMA2_Channel3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[40]">DMA2_Channel4_IRQHandler</a> from isr.o(i.DMA2_Channel4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[41]">DMA2_Channel5_IRQHandler</a> from isr.o(i.DMA2_Channel5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from common.o(i.DebugMon_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[42]">ETH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from isr.o(i.EXTI0_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2e]">EXTI15_10_IRQHandler</a> from isr.o(i.EXTI15_10_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from isr.o(i.EXTI1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from isr.o(i.EXTI2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from isr.o(i.EXTI3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from isr.o(i.EXTI4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1f]">EXTI9_5_IRQHandler</a> from isr.o(i.EXTI9_5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1d]">FlashCache_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from common.o(i.HardFault_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[27]">I2C1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[28]">I2C2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from common.o(i.MemManage_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from common.o(i.NMI_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[44]">OTG_FS_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[30]">OTG_FS_WKUP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from common.o(i.PendSV_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[f]">RCC_CRS_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2f]">RTCAlarm_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[36]">SDIO_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[38]">SPI3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from common.o(i.SVC_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[49]">SystemInit</a> from system_mm32f327x.o(i.SystemInit) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[20]">TIM1_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[23]">TIM1_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[22]">TIM1_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[21]">TIM1_UP_IRQHandler</a> from isr.o(i.TIM1_UP_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[24]">TIM2_IRQHandler</a> from isr.o(i.TIM2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[25]">TIM3_IRQHandler</a> from isr.o(i.TIM3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[26]">TIM4_IRQHandler</a> from isr.o(i.TIM4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[37]">TIM5_IRQHandler</a> from isr.o(i.TIM5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from isr.o(i.TIM6_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from isr.o(i.TIM7_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[31]">TIM8_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[34]">TIM8_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[33]">TIM8_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[32]">TIM8_UP_IRQHandler</a> from isr.o(i.TIM8_UP_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2b]">UART1_IRQHandler</a> from isr.o(i.UART1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2c]">UART2_IRQHandler</a> from isr.o(i.UART2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2d]">UART3_IRQHandler</a> from isr.o(i.UART3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[39]">UART4_IRQHandler</a> from isr.o(i.UART4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3a]">UART5_IRQHandler</a> from isr.o(i.UART5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[45]">UART6_IRQHandler</a> from isr.o(i.UART6_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[46]">UART7_IRQHandler</a> from isr.o(i.UART7_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[47]">UART8_IRQHandler</a> from isr.o(i.UART8_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from common.o(i.UsageFault_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[4a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[4b]">fputc</a> from zf_uart.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[48]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[63]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ea]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[eb]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ec]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[ed]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[ee]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>COMP1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FlashCache_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_pid
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Speed_Control
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Speed_Control
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_pid
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Speed_Control
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_pid
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Speed_Control
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_pid
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Speed_Control
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
</UL>

<P><STRONG><a name="[ef]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[f1]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[f2]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[f3]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[4f]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[58]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[57]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[f5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[f6]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>AngleControFunlOut</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, anglecontrol.o(i.AngleControFunlOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = AngleControFunlOut &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>AngleControl</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, anglecontrol.o(i.AngleControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AngleControl &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>Angle_Speed_Control</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, anglecontrol.o(i.Angle_Speed_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Angle_Speed_Control &rArr; gyro_x_ang_caculate &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>AutoCalPllFactor</STRONG> (Thumb, 102 bytes, Stack size 28 bytes, system_mm32f327x.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AutoCalPllFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>Coordinate_Filter</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, picture_deal.o(i.Coordinate_Filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Coordinate_Filter &rArr; PaiXu
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PaiXu
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Point
</UL>

<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_dma
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_dma
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel7_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMA_ClearFlag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel5_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel4_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel7_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>DMA_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_init
</UL>

<P><STRONG><a name="[a8]"></a>DMA_DeInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_init
</UL>

<P><STRONG><a name="[71]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel5_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel4_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel7_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_init
</UL>

<P><STRONG><a name="[a9]"></a>DMA_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hal_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_init
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, isr.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, isr.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_vsync
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_vsync
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_vsync
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>EXTI_GetITStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[ba]"></a>EXTI_Init</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_init
</UL>

<P><STRONG><a name="[b8]"></a>EXTI_LineConfig</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hal_exti.o(i.EXTI_LineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_LineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_init
</UL>

<P><STRONG><a name="[b9]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_init
</UL>

<P><STRONG><a name="[7b]"></a>Encoder_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, speed_out.o(i.Encoder_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Encoder_init &rArr; tim_counter_init &rArr; tim_counter_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>GetRealSpeed</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, speed_out.o(i.GetRealSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetRealSpeed &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_rst
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_get_count
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[de]"></a>NVIC_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
</UL>

<P><STRONG><a name="[70]"></a>PaiXu</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, picture_deal.o(i.PaiXu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PaiXu
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coordinate_Filter
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>PwmOut</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, pwm_out.o(i.PwmOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PwmOut &rArr; pwm_duty_updata &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma_init
</UL>

<P><STRONG><a name="[ae]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[ad]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>Scan_Point</STRONG> (Thumb, 666 bytes, Stack size 24 bytes, picture_deal.o(i.Scan_Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Scan_Point &rArr; Coordinate_Filter &rArr; PaiXu
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_s16
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Coordinate_Filter
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>SpeedControl</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, speed_out.o(i.SpeedControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SpeedControl &rArr; GetRealSpeed &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>SpeedControlFuncOut</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, speed_out.o(i.SpeedControlFuncOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SpeedControlFuncOut &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM1_UP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, isr.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM3_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM4_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM5_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, isr.o(i.TIM8_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TIM8_UP_IRQHandler &rArr; Angle_Speed_Control &rArr; gyro_x_ang_caculate &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_control
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_pid
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControlFuncOut
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Speed_Control
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleControFunlOut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>TIM_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[b5]"></a>TIM_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[8f]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, hal_tim.o(i.TIM_ETRClockMode1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM_ETRClockMode1Config &rArr; TIM_ETRConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[90]"></a>TIM_ETRConfig</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal_tim.o(i.TIM_ETRConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETRConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[b1]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_SelectInputTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[b3]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_SelectMasterSlaveMode))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[b2]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_SelectSlaveMode))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[b0]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[2b]"></a>UART1_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART2_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART3_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART4_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART5_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, isr.o(i.UART5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART6_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART7_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART8_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, isr.o(i.UART8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART8_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_cof_uart_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_uart_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f9]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[96]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_change
</UL>

<P><STRONG><a name="[9e]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_assert</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, seekfree_assert.o(i.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_region
</UL>

<P><STRONG><a name="[97]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[98]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[9a]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[9b]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[fa]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[fb]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[fc]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[a1]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[af]"></a>afio_init</STRONG> (Thumb, 218 bytes, Stack size 20 bytes, zf_gpio.o(i.afio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_pin_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_pin_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_pin_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>

<P><STRONG><a name="[9d]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[9f]"></a>atan2</STRONG> (Thumb, 374 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
</UL>

<P><STRONG><a name="[a2]"></a>board_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, board.o(i.board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = board_init &rArr; uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>button_change</STRONG> (Thumb, 422 bytes, Stack size 8 bytes, button_conrtol.o(i.button_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = button_change &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>button_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, button_conrtol.o(i.button_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = button_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>camera_dma_init</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, zf_camera.o(i.camera_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = camera_dma_init &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma_init
</UL>

<P><STRONG><a name="[ac]"></a>camera_tim_etr_init</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, zf_camera.o(i.camera_tim_etr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = camera_tim_etr_init &rArr; TIM_ETRClockMode1Config &rArr; TIM_ETRConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectSlaveMode
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectMasterSlaveMode
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACmd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_tim1_etr_init
</UL>

<P><STRONG><a name="[d7]"></a>center_line</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, picture_deal.o(i.center_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = center_line
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>direction_pid</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, picture_deal.o(i.direction_pid))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = direction_pid &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>distance_control</STRONG> (Thumb, 682 bytes, Stack size 8 bytes, picture_deal.o(i.distance_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = distance_control &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[b7]"></a>exti_interrupt_init</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, zf_exti.o(i.exti_interrupt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = exti_interrupt_init &rArr; nvic_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_LineConfig
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_exti_init
</UL>

<P><STRONG><a name="[4b]"></a>fputc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_uart.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[bc]"></a>get_config</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, seekfree_mt9v03x.o(i.get_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_config &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[be]"></a>get_icm20602_accdata_spi</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.get_icm20602_accdata_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = get_icm20602_accdata_spi &rArr; icm_spi_r_reg_bytes &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
</UL>

<P><STRONG><a name="[c0]"></a>get_icm20602_gyro_spi</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.get_icm20602_gyro_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = get_icm20602_gyro_spi &rArr; icm_spi_r_reg_bytes &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_x_ang_caculate
</UL>

<P><STRONG><a name="[7f]"></a>gpio_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_gpio.o(i.gpio_get))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_change
</UL>

<P><STRONG><a name="[7d]"></a>gpio_init</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, zf_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_exti_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma_init
</UL>

<P><STRONG><a name="[b6]"></a>gpio_set</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, zf_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distance_control
</UL>

<P><STRONG><a name="[d6]"></a>gray_to_2bw_otsu_ys</STRONG> (Thumb, 112 bytes, Stack size 28 bytes, otsu.o(i.gray_to_2bw_otsu_ys))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gray_to_2bw_otsu_ys
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>gyro_x_ang_caculate</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, anglecontrol.o(i.gyro_x_ang_caculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = gyro_x_ang_caculate &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_gyro_spi
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_accdata_spi
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Speed_Control
</UL>

<P><STRONG><a name="[c1]"></a>icm20602_init_spi</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, seekfree_icm20602.o(i.icm20602_init_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = icm20602_init_spi &rArr; spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_w_reg_byte
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>lcd_clear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, seekfree_18tft.o(i.lcd_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_clear &rArr; lcd_set_region &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writedata_16bit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>lcd_init</STRONG> (Thumb, 716 bytes, Stack size 16 bytes, seekfree_18tft.o(i.lcd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lcd_init &rArr; spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writeIndex
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writeData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>lcd_showchar</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, seekfree_18tft.o(i.lcd_showchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lcd_showchar &rArr; lcd_set_region &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writedata_16bit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_showstr
</UL>

<P><STRONG><a name="[cf]"></a>lcd_showstr</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, seekfree_18tft.o(i.lcd_showstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lcd_showstr &rArr; lcd_showchar &rArr; lcd_set_region &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_showchar
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>limit_s16</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, picture_deal.o(i.limit_s16))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Point
</UL>

<P><STRONG><a name="[8e]"></a>lost_control</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, picture_deal.o(i.lost_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = lost_control &rArr; string_light &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_light
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>main</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; lcd_showstr &rArr; lcd_showchar &rArr; lcd_set_region &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcan_sendware_wireless
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_interrupt_init_ms
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_showstr
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gray_to_2bw_otsu_ys
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;center_line
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_change
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Point
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[d1]"></a>motor_init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, pwm_out.o(i.motor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = motor_init &rArr; pwm_init &rArr; pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>mt9v03x_dma</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_dma))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>mt9v03x_dma_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, seekfree_mt9v03x.o(i.mt9v03x_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mt9v03x_dma_init &rArr; camera_dma_init &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[da]"></a>mt9v03x_exti_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, seekfree_mt9v03x.o(i.mt9v03x_exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mt9v03x_exti_init &rArr; exti_interrupt_init &rArr; nvic_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[d3]"></a>mt9v03x_init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, seekfree_mt9v03x.o(i.mt9v03x_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mt9v03x_init &rArr; mt9v03x_dma_init &rArr; camera_dma_init &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_tim1_etr_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_exti_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>mt9v03x_tim1_etr_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, seekfree_mt9v03x.o(i.mt9v03x_tim1_etr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mt9v03x_tim1_etr_init &rArr; camera_tim_etr_init &rArr; TIM_ETRClockMode1Config &rArr; TIM_ETRConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_tim_etr_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[92]"></a>mt9v03x_uart_callback</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_uart_callback))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>mt9v03x_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[bb]"></a>nvic_init</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, common.o(i.nvic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nvic_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_interrupt_init_ms
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_exti_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma_init
</UL>

<P><STRONG><a name="[91]"></a>ov7725_cof_uart_interrupt</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_cof_uart_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>ov7725_dma</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_dma))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>ov7725_uart_dma</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_dma))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>ov7725_uart_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[78]"></a>ov7725_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>pwm_duty_updata</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, zf_pwm.o(i.pwm_duty_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwm_duty_updata &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmOut
</UL>

<P><STRONG><a name="[d8]"></a>pwm_init</STRONG> (Thumb, 654 bytes, Stack size 48 bytes, zf_pwm.o(i.pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = pwm_init &rArr; pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_pin_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[d2]"></a>seekfree_wireless_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, seekfree_wireless.o(i.seekfree_wireless_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = seekfree_wireless_init &rArr; uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>set_config</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, seekfree_mt9v03x.o(i.set_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = set_config &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[c3]"></a>spi_init</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, zf_spi.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[c7]"></a>spi_mosi</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, zf_spi.o(i.spi_mosi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writedata_16bit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writeIndex
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writeData
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_w_reg_byte
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
</UL>

<P><STRONG><a name="[d0]"></a>string_light</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, picture_deal.o(i.string_light))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = string_light &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lost_control
</UL>

<P><STRONG><a name="[e2]"></a>systick_delay</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, zf_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[c2]"></a>systick_delay_ms</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, zf_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systick_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_config
</UL>

<P><STRONG><a name="[80]"></a>tim_counter_get_count</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_tim.o(i.tim_counter_get_count))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
</UL>

<P><STRONG><a name="[7c]"></a>tim_counter_init</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, zf_tim.o(i.tim_counter_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tim_counter_init &rArr; tim_counter_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_init
</UL>

<P><STRONG><a name="[81]"></a>tim_counter_rst</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, zf_tim.o(i.tim_counter_rst))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRealSpeed
</UL>

<P><STRONG><a name="[d4]"></a>tim_interrupt_init_ms</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, zf_pit.o(i.tim_interrupt_init_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tim_interrupt_init_ms &rArr; nvic_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>uart_init</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, zf_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[bd]"></a>uart_putbuff</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, zf_uart.o(i.uart_putbuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_config
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_config
</UL>

<P><STRONG><a name="[e7]"></a>uart_putchar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_uart.o(i.uart_putchar))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_send_char
</UL>

<P><STRONG><a name="[db]"></a>uart_rx_irq</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, zf_uart.o(i.uart_rx_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uart_rx_irq &rArr; nvic_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[e5]"></a>usart1_putbuff</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, vcan_usart.o(i.usart1_putbuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart1_putbuff &rArr; usart1_send_char
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_send_char
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcan_sendware_wireless
</UL>

<P><STRONG><a name="[e6]"></a>usart1_send_char</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, vcan_usart.o(i.usart1_send_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart1_send_char
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_putbuff
</UL>

<P><STRONG><a name="[d5]"></a>vcan_sendware_wireless</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, vcan_usart.o(i.vcan_sendware_wireless))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vcan_sendware_wireless &rArr; usart1_putbuff &rArr; usart1_send_char
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[88]"></a>DELAY_xUs</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_mm32f327x.o(i.DELAY_xUs))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[86]"></a>SetSysClock</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[87]"></a>SetSysClockToXX</STRONG> (Thumb, 462 bytes, Stack size 32 bytes, system_mm32f327x.o(i.SetSysClockToXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[e0]"></a>pwm_pin_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, zf_pwm.o(i.pwm_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[e1]"></a>spi_pin_init</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, zf_spi.o(i.spi_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[e3]"></a>tim_counter_pin_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, zf_tim.o(i.tim_counter_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tim_counter_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_init
</UL>

<P><STRONG><a name="[e4]"></a>uart_pin_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, zf_uart.o(i.uart_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[c9]"></a>lcd_set_region</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, seekfree_18tft.o(i.lcd_set_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lcd_set_region &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writeIndex
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_writeData
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_showchar
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>

<P><STRONG><a name="[cd]"></a>lcd_writeData</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, seekfree_18tft.o(i.lcd_writeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_writeData &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_region
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[cc]"></a>lcd_writeIndex</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, seekfree_18tft.o(i.lcd_writeIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_writeIndex &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_region
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[ca]"></a>lcd_writedata_16bit</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, seekfree_18tft.o(i.lcd_writedata_16bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lcd_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_showchar
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>

<P><STRONG><a name="[c4]"></a>icm20602_self3_check</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, seekfree_icm20602.o(i.icm20602_self3_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = icm20602_self3_check &rArr; icm_spi_r_reg_byte &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[c6]"></a>icm_spi_r_reg_byte</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.icm_spi_r_reg_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = icm_spi_r_reg_byte &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
</UL>

<P><STRONG><a name="[bf]"></a>icm_spi_r_reg_bytes</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.icm_spi_r_reg_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = icm_spi_r_reg_bytes &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_gyro_spi
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_accdata_spi
</UL>

<P><STRONG><a name="[c5]"></a>icm_spi_w_reg_byte</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.icm_spi_w_reg_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = icm_spi_w_reg_byte &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[94]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
